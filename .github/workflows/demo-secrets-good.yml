name: CI/CD Full Deployment

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 503640389215.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: registration-app
  APP_EC2_IP: ${{ secrets.APP_EC2_IP }}
  PROXY_EC2_IP: ${{ secrets.PROXY_EC2_IP }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & push backend Docker image
        run: |
          docker build -t $ECR_REPOSITORY-backend:latest ./backend
          docker tag $ECR_REPOSITORY-backend:latest $ECR_REGISTRY/$ECR_REPOSITORY-backend:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY-backend:latest

      - name: Build & push frontend Docker image
        run: |
          docker build -t $ECR_REPOSITORY-frontend:latest ./frontend
          docker tag $ECR_REPOSITORY-frontend:latest $ECR_REGISTRY/$ECR_REPOSITORY-frontend:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY-frontend:latest

  deploy-app-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy backend & frontend to App EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.APP_EC2_IP }}
          username: ubuntu
          key: ${{ secrets.APP_EC2_SSH_KEY }}
          script: |
            # Ensure Docker permissions
            sudo usermod -aG docker ubuntu
            newgrp docker

            # Go to app directory
            cd ~/registration-app || exit

            # Pull latest code
            git pull

            # Login to AWS ECR
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

            # Pull latest images & start containers
            docker-compose -f docker-compose.ecr.yml pull
            docker-compose -f docker-compose.ecr.yml up -d --remove-orphans

  deploy-proxy-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Nginx Proxy to Proxy EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PROXY_EC2_IP }}
          username: ubuntu
          key: ${{ secrets.PROXY_EC2_SSH_KEY }}
          script: |
            # Ensure Docker permissions
            sudo usermod -aG docker ubuntu
            newgrp docker

            # Go to Proxy folder (capital P)
            cd ~/registration-app/Proxy || exit

            # Build & start proxy
            docker-compose -f docker-compose.yml up -d --build --remove-orphans

            # Issue SSL certificates with Certbot
            docker exec nginx-proxy certbot --nginx --non-interactive --agree-tos \
              -m okoro.christianpeace@gmail.com \
              -d mypodsix.online -d www.mypodsix.online




















         



