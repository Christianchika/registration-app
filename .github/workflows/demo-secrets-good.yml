name: CI/CD Full Deployment (No SSL)

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 503640389215.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: registration-app
  APP_EC2_IP: ${{ secrets.APP_EC2_IP }}
  PROXY_EC2_IP: ${{ secrets.PROXY_EC2_IP }}

jobs:
  build-and-push:
    name: Build & Push Docker Images to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build & Push Backend Docker Image
        run: |
          docker build -t $ECR_REPOSITORY-backend:${{ github.run_number }} ./backend
          docker tag $ECR_REPOSITORY-backend:${{ github.run_number }} $ECR_REGISTRY/$ECR_REPOSITORY-backend:${{ github.run_number }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY-backend:${{ github.run_number }}

      - name: Build & Push Frontend Docker Image
        run: |
          docker build -t $ECR_REPOSITORY-frontend:${{ github.run_number }} ./frontend
          docker tag $ECR_REPOSITORY-frontend:${{ github.run_number }} $ECR_REGISTRY/$ECR_REPOSITORY-frontend:${{ github.run_number }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY-frontend:${{ github.run_number }}

  deploy-app-ec2:
    name: Deploy Application on App EC2
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: SSH & Deploy to App EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.APP_EC2_IP }}
          username: ubuntu
          key: ${{ secrets.APP_EC2_SSH_KEY }}
          script: |
            echo "Adding ubuntu to docker group..."
            sudo usermod -aG docker ubuntu
            newgrp docker || true

            cd ~/registration-app || exit
            git reset --hard
            git pull origin main

            echo "Logging in to AWS ECR..."
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            export AWS_REGION=us-east-1
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

            echo "Pulling latest images..."
            docker-compose -f docker-compose.ecr.yml pull

            echo "Starting containers..."
            docker-compose -f docker-compose.ecr.yml up -d --remove-orphans

  deploy-proxy-ec2:
    name: Deploy Nginx Proxy on Proxy EC2
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: SSH & Deploy Nginx Proxy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PROXY_EC2_IP }}
          username: ubuntu
          key: ${{ secrets.PROXY_EC2_SSH_KEY }}
          script: |
            echo "Adding ubuntu to docker group..."
            sudo usermod -aG docker ubuntu
            newgrp docker || true

            cd ~/registration-app/Proxy || exit

            echo "Starting Nginx Proxy..."
            docker-compose -f docker-compose.yml up -d --build --remove-orphans

























         



