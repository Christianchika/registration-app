name: Deploy Registration App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push Frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: ${{ env.ECR_REGISTRY }}/registration-frontend:latest
          build-args: |
            REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}

      - name: Build & Push Backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: ${{ env.ECR_REGISTRY }}/registration-backend:latest

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Copy docker-compose file to EC2 App Server
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.app.yml ${{ secrets.EC2_USER }}@${{ secrets.EC2_APP_HOST }}:~/app/

      - name: Deploy to EC2 App Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_APP_HOST }} << 'EOF'
            set -e
            cd ~/app

            # Update system and install required tools
            sudo apt update -y
            sudo apt install -y docker.io python3-pip
            sudo pip3 install docker-compose awscli

            # Authenticate and pull images
            aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

            # Pull latest images and restart containers
            sudo docker compose -f docker-compose.app.yml pull
            sudo docker compose -f docker-compose.app.yml up -d --remove-orphans
          EOF




         



