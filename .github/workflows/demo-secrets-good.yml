name: Deploy Registration App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: <AWS_ACCOUNT_ID>.dkr.ecr.us-east-1.amazonaws.com

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to ECR from GitHub (for build & push)
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push Frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: ${{ env.ECR_REGISTRY }}/registration-frontend:latest
          build-args: |
            REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}

      - name: Build & Push Backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: ${{ env.ECR_REGISTRY }}/registration-backend:latest

      - name: Copy docker-compose file to EC2 App Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: docker-compose.app.yml
          target: ~/app

      - name: Deploy to EC2 App Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            cd ~/app

            # Update system and install tools
            sudo apt update -y
            sudo apt install -y docker.io python3-pip unzip curl

            # Ensure docker-compose available
            if ! command -v docker-compose &> /dev/null; then
              sudo apt install -y docker-compose-plugin || sudo pip3 install docker-compose
            fi

            # Authenticate Docker to ECR using the EC2 IAM role
            aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

            # Pull and run containers
            sudo docker compose -f docker-compose.app.yml pull
            sudo docker compose -f docker-compose.app.yml up -d --remove-orphans











         



