name: Deploy Registration App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push Frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: ${{ env.ECR_REGISTRY }}/registration-frontend:latest
          build-args: |
            REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}

      - name: Build & Push Backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: ${{ env.ECR_REGISTRY }}/registration-backend:latest

      - name: Copy docker-compose file to EC2 App Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_APP_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: docker-compose.app.yml
          target: ~/app

      - name: Copy docker-compose file to EC2 Proxy Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_PROXY_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: docker-compose.proxy.yml
          target: ~/proxy

      - name: Deploy to EC2 App Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_APP_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            cd ~/app

            # Update system and install required tools safely
            sudo apt update -y
            sudo apt install -y docker.io docker-compose-plugin unzip curl

            # Install AWS CLI v2
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install

            # Login to ECR
            aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

            # Pull and run containers
            sudo docker compose -f docker-compose.app.yml pull
            sudo docker compose -f docker-compose.app.yml up -d --remove-orphans

      - name: Deploy to EC2 Proxy Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_PROXY_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            cd ~/proxy

            # Update system and install required tools safely
            sudo apt update -y
            sudo apt install -y docker.io docker-compose-plugin unzip curl

            # Install AWS CLI v2 (optional if proxy doesnâ€™t pull images)
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install

            # Pull and run Nginx reverse proxy with LetsEncrypt
            sudo docker compose -f docker-compose.proxy.yml pull
            sudo docker compose -f docker-compose.proxy.yml up -d --remove-orphans


         



